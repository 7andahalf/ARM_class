


ARM Macro Assembler    Page 1 


    1 00000000         ; INPUT:  R10 start of array 
    2 00000000         ;   R11 length of array
    3 00000000         ; OUTPUT: R0 or R1
    4 00000000         
    5 00000000                 AREA             appcode, CODE, READONLY
    6 00000000                 EXPORT           __main
    7 00000000                 ENTRY
    8 00000000         
    9 00000000         
   10 00000000         __main  FUNCTION
   11 00000000 F04F 050B       MOV              r5, #0x0B   ;
   12 00000004         
   13 00000004 F000 F801       BL               h_dec
   14 00000008         
   15 00000008 E7FE    stop    B                stop        ; stop program
   16 0000000A                 ENDFUNC
   17 0000000A         
   18 0000000A         
   19 0000000A         ; R5 = Inp
   20 0000000A         ; R6 = Output
   21 0000000A         h_dec                                ; const
   22 0000000A F04F 0800       MOV              r8, #0      ;
   23 0000000E         
   24 0000000E         ; Parity 1
   25 0000000E 462E            MOV              r6, r5      ;
   26 00000010 462F            MOV              r7, r5      ;
   27 00000012 EA4F 06F6       ROR              r6, #3      ;
   28 00000016 EA4F 0777       ROR              r7, #1      ;
   29 0000001A F006 0601       AND              r6, #1      ;
   30 0000001E F007 0701       AND              r7, #1      ;
   31 00000022 EA86 0607       EOR              r6, r6, r7  ;
   32 00000026 462F            MOV              r7, r5      ;
   33 00000028 EA4F 1777       ROR              r7, #5      ;
   34 0000002C F007 0701       AND              r7, #1      ;
   35 00000030 EA86 0607       EOR              r6, r6, r7  ;
   36 00000034 44B0            ADD              r8, r8, r6  ;
   37 00000036         
   38 00000036         ; Parity 2
   39 00000036 462E            MOV              r6, r5      ;
   40 00000038 462F            MOV              r7, r5      ;
   41 0000003A EA4F 06F6       ROR              r6, #3      ;
   42 0000003E F006 0601       AND              r6, #1      ;
   43 00000042 F007 0701       AND              r7, #1      ;
   44 00000046 EA86 0607       EOR              r6, r6, r7  ;
   45 0000004A 462F            MOV              r7, r5      ;
   46 0000004C EA4F 1737       ROR              r7, #4      ;
   47 00000050 F007 0701       AND              r7, #1      ;
   48 00000054 EA86 0607       EOR              r6, r6, r7  ;
   49 00000058 44B0            ADD              r8, r8, r6  ;
   50 0000005A 44B0            ADD              r8, r8, r6  ;
   51 0000005C         
   52 0000005C         ; Parity 3
   53 0000005C 462E            MOV              r6, r5      ;
   54 0000005E 462F            MOV              r7, r5      ;
   55 00000060 EA4F 0676       ROR              r6, #1      ;
   56 00000064 F006 0601       AND              r6, #1      ;
   57 00000068 F007 0701       AND              r7, #1      ;
   58 0000006C EA86 0607       EOR              r6, r6, r7  ;
   59 00000070 462F            MOV              r7, r5      ;



ARM Macro Assembler    Page 2 


   60 00000072 EA4F 07B7       ROR              r7, #2      ;
   61 00000076 F007 0701       AND              r7, #1      ;
   62 0000007A EA86 0607       EOR              r6, r6, r7  ;
   63 0000007E 44B0            ADD              r8, r8, r6  ;
   64 00000080 44B0            ADD              r8, r8, r6  ;
   65 00000082 44B0            ADD              r8, r8, r6  ;
   66 00000084 44B0            ADD              r8, r8, r6  ;
   67 00000086         
   68 00000086         ; check if any errors
   69 00000086         
   70 00000086 462F            MOV              r7, r5      ;
   71 00000088         
   72 00000088 F1B8 0F00       CMP              r8, #0      ;
   73 0000008C D009            BEQ              done
   74 0000008E         
   75 0000008E F04F 0606       MOV              r6, #6      ;
   76 00000092 EBA6 0808       SUB              r8, r6 , r8
   77 00000096 F04F 0601       MOV              r6, #1      ;
   78 0000009A FA06 F608       LSL              r6, r8      ;
   79 0000009E EA87 0706       EOR              r7, r7, r6  ;
   80 000000A2         
   81 000000A2 463E    done    MOV              r6, r7      ;
   82 000000A4 F006 0603       AND              r6, #3      ;
   83 000000A8 EA4F 0757       LSR              r7, #1      ;
   84 000000AC F007 0704       AND              r7, #4      ;
   85 000000B0 EA46 0607       ORR              r6, r7      ;
   86 000000B4         
   87 000000B4 4770            BX               lr
   88 000000B6         
   89 000000B6                 END
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\final.d -o.\objects\final.o -I.\RTE\_Target_1 -ID:\Ke
il_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\Include -ID:\Keil_v5\ARM\PACK\ARM\CMSIS\5.
3.0\Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --predefine="__UVISIO
N_VERSION SETA 525" --predefine="_RTE_ SETA 1" --predefine="ARMCM4_FP SETA 1" -
-list=.\listings\final.lst final.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

__main 00000000

Symbol: __main
   Definitions
      At line 10 in file final.s
   Uses
      At line 6 in file final.s
Comment: __main used once
appcode 00000000

Symbol: appcode
   Definitions
      At line 5 in file final.s
   Uses
      None
Comment: appcode unused
done 000000A2

Symbol: done
   Definitions
      At line 81 in file final.s
   Uses
      At line 73 in file final.s
Comment: done used once
h_dec 0000000A

Symbol: h_dec
   Definitions
      At line 21 in file final.s
   Uses
      At line 13 in file final.s
Comment: h_dec used once
stop 00000008

Symbol: stop
   Definitions
      At line 15 in file final.s
   Uses
      At line 15 in file final.s
Comment: stop used once
5 symbols
340 symbols in table
